{"version":3,"sources":["../node_modules/ramda/es/internal/_curry3.js","../node_modules/ramda/es/invoker.js","../node_modules/ramda/es/internal/_isFunction.js","../node_modules/ramda/es/internal/_includes.js","../node_modules/ramda/es/internal/_indexOf.js","../node_modules/ramda/es/internal/_map.js","../node_modules/ramda/es/internal/_quote.js","../node_modules/ramda/es/internal/_toISOString.js","../node_modules/ramda/es/reject.js","../node_modules/ramda/es/internal/_complement.js","../node_modules/ramda/es/toString.js","../node_modules/ramda/es/internal/_toString.js","../node_modules/ramda/es/internal/_arrayFromIterator.js","../node_modules/ramda/es/internal/_includesWith.js","../node_modules/ramda/es/internal/_objectIs.js","../node_modules/ramda/es/type.js","../node_modules/ramda/es/internal/_equals.js","../node_modules/ramda/es/internal/_functionName.js","../node_modules/ramda/es/equals.js","../node_modules/ramda/es/curryN.js","../node_modules/ramda/es/internal/_curryN.js","../node_modules/ramda/es/join.js","../node_modules/ramda/es/split.js","../node_modules/ramda/es/not.js","../node_modules/ramda/es/ifElse.js","../node_modules/ramda/es/concat.js","../node_modules/ramda/es/replace.js","../node_modules/ramda/es/internal/_pipe.js","../node_modules/ramda/es/reduce.js","../node_modules/ramda/es/internal/_checkForMethod.js","../node_modules/ramda/es/slice.js","../node_modules/ramda/es/tail.js","../node_modules/ramda/es/reverse.js","../node_modules/ramda/es/compose.js","../node_modules/ramda/es/pipe.js","../node_modules/ramda/es/empty.js","../node_modules/ramda/es/isEmpty.js","../node_modules/ramda/es/length.js","../node_modules/ramda/es/internal/_isNumber.js"],"names":["__webpack_require__","d","__webpack_exports__","_curry3","_curry1_js__WEBPACK_IMPORTED_MODULE_0__","_curry2_js__WEBPACK_IMPORTED_MODULE_1__","_isPlaceholder_js__WEBPACK_IMPORTED_MODULE_2__","fn","f3","a","b","c","arguments","length","Object","_b","_c","_a","_internal_curry2_js__WEBPACK_IMPORTED_MODULE_0__","_internal_isFunction_js__WEBPACK_IMPORTED_MODULE_1__","_curryN_js__WEBPACK_IMPORTED_MODULE_2__","_toString_js__WEBPACK_IMPORTED_MODULE_3__","invoker","arity","method","target","apply","Array","prototype","slice","call","TypeError","_isFunction","x","toString","_includes","list","idx","inf","item","indexOf","equals","_indexOf","_map","functor","len","result","_quote","s","replace","pad","n","internal_toISOString","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","es_reject","_curry2","pred","filterable","filter","f","this","toString_toString","_curry1","val","_toString","seen","recur","y","xs","concat","mapPairs","obj","keys","k","sort","join","test","es_keys","valueOf","isNaN","NaN","repr","_arrayFromIterator","iter","next","done","push","value","_includesWith","internal_objectIs","is","es_type","undefined","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","constructor","match","String","_functionName","name","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","values","keysA","extendedStackA","extendedStackB","key","_has","equals_equals","curryN_curryN","_arity","_curryN","received","combined","argsIdx","left","combinedIdx","_isPlaceholder","_invoker_js__WEBPACK_IMPORTED_MODULE_0__","split","_internal_curry1_js__WEBPACK_IMPORTED_MODULE_0__","not","_internal_curry3_js__WEBPACK_IMPORTED_MODULE_0__","_curryN_js__WEBPACK_IMPORTED_MODULE_1__","ifElse","condition","onTrue","onFalse","Math","max","_internal_isArray_js__WEBPACK_IMPORTED_MODULE_1__","_internal_isFunction_js__WEBPACK_IMPORTED_MODULE_2__","_internal_isString_js__WEBPACK_IMPORTED_MODULE_3__","_toString_js__WEBPACK_IMPORTED_MODULE_4__","regex","replacement","str","_pipe","g","es_reduce","_reduce","_checkForMethod","methodname","_isArray","es_slice","fromIndex","toIndex","es_tail","Infinity","es_reverse","_isString","reverse","compose","Error","es_empty","empty","_isObject","_isArguments","isEmpty_isEmpty","length_length"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,IAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,IAYe,SAAAG,EAAAI,GACf,gBAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAAC,UAAAC,QACA,OACA,OAAAL,EAEA,OACA,OAAeM,OAAAR,EAAA,EAAAQ,CAAcL,GAAAD,EAAWM,OAAAT,EAAA,EAAAS,CAAO,SAAAC,EAAAC,GAC/C,OAAAT,EAAAE,EAAAM,EAAAC,KAGA,OACA,OAAeF,OAAAR,EAAA,EAAAQ,CAAcL,IAAOK,OAAAR,EAAA,EAAAQ,CAAcJ,GAAAF,EAAWM,OAAAR,EAAA,EAAAQ,CAAcL,GAAMK,OAAAT,EAAA,EAAAS,CAAO,SAAAG,EAAAD,GACxF,OAAAT,EAAAU,EAAAP,EAAAM,KACaF,OAAAR,EAAA,EAAAQ,CAAcJ,GAAMI,OAAAT,EAAA,EAAAS,CAAO,SAAAC,EAAAC,GACxC,OAAAT,EAAAE,EAAAM,EAAAC,KACaF,OAAAV,EAAA,EAAAU,CAAO,SAAAE,GACpB,OAAAT,EAAAE,EAAAC,EAAAM,KAGA,QACA,OAAeF,OAAAR,EAAA,EAAAQ,CAAcL,IAAOK,OAAAR,EAAA,EAAAQ,CAAcJ,IAAOI,OAAAR,EAAA,EAAAQ,CAAcH,GAAAH,EAAWM,OAAAR,EAAA,EAAAQ,CAAcL,IAAOK,OAAAR,EAAA,EAAAQ,CAAcJ,GAAMI,OAAAT,EAAA,EAAAS,CAAO,SAAAG,EAAAF,GAClI,OAAAR,EAAAU,EAAAF,EAAAJ,KACaG,OAAAR,EAAA,EAAAQ,CAAcL,IAAOK,OAAAR,EAAA,EAAAQ,CAAcH,GAAMG,OAAAT,EAAA,EAAAS,CAAO,SAAAG,EAAAD,GAC7D,OAAAT,EAAAU,EAAAP,EAAAM,KACaF,OAAAR,EAAA,EAAAQ,CAAcJ,IAAOI,OAAAR,EAAA,EAAAQ,CAAcH,GAAMG,OAAAT,EAAA,EAAAS,CAAO,SAAAC,EAAAC,GAC7D,OAAAT,EAAAE,EAAAM,EAAAC,KACaF,OAAAR,EAAA,EAAAQ,CAAcL,GAAMK,OAAAV,EAAA,EAAAU,CAAO,SAAAG,GACxC,OAAAV,EAAAU,EAAAP,EAAAC,KACaG,OAAAR,EAAA,EAAAQ,CAAcJ,GAAMI,OAAAV,EAAA,EAAAU,CAAO,SAAAC,GACxC,OAAAR,EAAAE,EAAAM,EAAAJ,KACaG,OAAAR,EAAA,EAAAQ,CAAcH,GAAMG,OAAAV,EAAA,EAAAU,CAAO,SAAAE,GACxC,OAAAT,EAAAE,EAAAC,EAAAM,KACST,EAAAE,EAAAC,EAAAC,wCC7CT,IAAAO,EAAAlB,EAAA,IAAAmB,EAAAnB,EAAA,KAAAoB,EAAApB,EAAA,KAAAqB,EAAArB,EAAA,KAgCAsB,EAEAR,OAAAI,EAAA,EAAAJ,CAAO,SAAAS,EAAAC,GACP,OAASV,OAAAM,EAAA,EAAAN,CAAMS,EAAA,aACf,IAAAE,EAAAb,UAAAW,GAEA,SAAAE,GAA0BX,OAAAK,EAAA,EAAAL,CAAWW,EAAAD,IACrC,OAAAC,EAAAD,GAAAE,MAAAD,EAAAE,MAAAC,UAAAC,MAAAC,KAAAlB,UAAA,EAAAW,IAGA,UAAAQ,UAAwBjB,OAAAO,EAAA,EAAAP,CAAQW,GAAA,kCAAAD,EAAA,SAIjBtB,EAAA,sCC9CA,SAAA8B,EAAAC,GACf,4BAAAnB,OAAAc,UAAAM,SAAAJ,KAAAG,GADAjC,EAAAC,EAAAC,EAAA,sBAAA8B,2DCCe,SAAAG,EAAA1B,EAAA2B,GACf,OCDe,SAAAA,EAAA3B,EAAA4B,GACf,IAAAC,EAAAC,EAEA,uBAAAH,EAAAI,QACA,cAAA/B,GACA,aACA,OAAAA,EAAA,CAIA,IAFA6B,EAAA,EAAA7B,EAEA4B,EAAAD,EAAAvB,QAAA,CAGA,QAFA0B,EAAAH,EAAAC,KAEA,EAAAE,IAAAD,EACA,OAAAD,EAGAA,GAAA,EAGA,SACS,GAAA5B,MAAA,CAET,KAAA4B,EAAAD,EAAAvB,QAAA,CAGA,qBAFA0B,EAAAH,EAAAC,KAEAE,MACA,OAAAF,EAGAA,GAAA,EAGA,SAIA,OAAAD,EAAAI,QAAA/B,EAAA4B,GAGA,aACA,cACA,eACA,gBACA,OAAAD,EAAAI,QAAA/B,EAAA4B,GAEA,aACA,UAAA5B,EAEA,OAAA2B,EAAAI,QAAA/B,EAAA4B,GAOA,KAAAA,EAAAD,EAAAvB,QAAA,CACA,GAAQC,OAAA2B,EAAA,EAAA3B,CAAMsB,EAAAC,GAAA5B,GACd,OAAA4B,EAGAA,GAAA,EAGA,SD/DSK,CAAQN,EAAA3B,EAAA,MEFF,SAAAkC,EAAApC,EAAAqC,GAKf,IAJA,IAAAP,EAAA,EACAQ,EAAAD,EAAA/B,OACAiC,EAAAnB,MAAAkB,GAEAR,EAAAQ,GACAC,EAAAT,GAAA9B,EAAAqC,EAAAP,IACAA,GAAA,EAGA,OAAAS,ECVe,SAAAC,EAAAC,GAGf,UAFAA,EAAAC,QAAA,cAAAA,QAAA,eACAA,QAAA,aAAAA,QAAA,aAAAA,QAAA,aAAAA,QAAA,aAAAA,QAAA,aAAAA,QAAA,aACAA,QAAA,gBCAA,IAAAC,EAAA,SAAAC,GACA,OAAAA,EAAA,WAAAA,GASeC,EANf,oBAAAC,KAAAzB,UAAA0B,YAAA,SAAArD,GACA,OAAAA,EAAAqD,eACC,SAAArD,GACD,OAAAA,EAAAsD,iBAAA,IAAAL,EAAAjD,EAAAuD,cAAA,OAAAN,EAAAjD,EAAAwD,cAAA,IAAAP,EAAAjD,EAAAyD,eAAA,IAAAR,EAAAjD,EAAA0D,iBAAA,IAAAT,EAAAjD,EAAA2D,iBAAA,KAAA3D,EAAA4D,qBAAA,KAAAC,QAAA,GAAAjC,MAAA,wCCwBekC,EAJfjD,OAAAkD,EAAA,EAAAlD,CAAO,SAAAmD,EAAAC,GACP,OAASpD,OAAAqD,EAAA,EAAArD,EC/BMsD,ED+BYH,EC9B3B,WACA,OAAAG,EAAA1C,MAAA2C,KAAAzD,aD6B2BsD,GC/BZ,IAAAE,ICuCf,IAAIE,EAEJxD,OAAAyD,EAAA,EAAAzD,CAAO,SAAA0D,GACP,OCpCe,SAAAC,EAAAxC,EAAAyC,GACf,IAAAC,EAAA,SAAAC,GACA,IAAAC,EAAAH,EAAAI,OAAA,CAAA7C,IACA,OAAWE,EAASyC,EAAAC,GAAA,aAAAJ,EAAAG,EAAAC,IAIpBE,EAAA,SAAAC,EAAAC,GACA,OAAWtC,EAAI,SAAAuC,GACf,OAAanC,EAAMmC,GAAA,KAAAP,EAAAK,EAAAE,KACdD,EAAApD,QAAAsD,SAGL,OAAArE,OAAAc,UAAAM,SAAAJ,KAAAG,IACA,yBACA,2CAAoDU,EAAIgC,EAAA1C,GAAAmD,KAAA,WAExD,qBACA,UAAmBzC,EAAIgC,EAAA1C,GAAA6C,OAAAC,EAAA9C,EAA8B8B,EAAM,SAAAmB,GAC3D,cAAAG,KAAAH,IACSpE,OAAAwE,EAAA,EAAAxE,CAAImB,MAAAmD,KAAA,UAEb,uBACA,wBAAAnD,EAAA,eAAA0C,EAAA1C,EAAAsD,WAAA,IAAAtD,EAAAC,WAEA,oBACA,mBAAAsD,MAAAvD,EAAAsD,WAAAZ,EAAAc,KAA8D1C,EAAOK,EAAYnB,KAAA,IAEjF,oBACA,aAEA,sBACA,wBAAAA,EAAA,cAAA0C,EAAA1C,EAAAsD,WAAA,MAAAtD,KAAA,SAAAA,EAAAC,SAAA,IAEA,sBACA,wBAAAD,EAAA,cAAA0C,EAAA1C,EAAAsD,WAAA,IAAgFxC,EAAMd,GAEtF,yBACA,kBAEA,QACA,uBAAAA,EAAAC,SAAA,CACA,IAAAwD,EAAAzD,EAAAC,WAEA,uBAAAwD,EACA,OAAAA,EAIA,UAAeX,EAAA9C,EAAgBnB,OAAAwE,EAAA,EAAAxE,CAAImB,IAAAmD,KAAA,WDb1BX,CAASD,EAAA,MAGHtE,EAAA,kDE7CA,SAAAyF,EAAAC,GAIf,IAHA,IACAC,EADAzD,EAAA,KAGAyD,EAAAD,EAAAC,QAAAC,MACA1D,EAAA2D,KAAAF,EAAAG,OAGA,OAAA5D,ECRe,SAAA6D,EAAAhC,EAAAhC,EAAAG,GAIf,IAHA,IAAAC,EAAA,EACAQ,EAAAT,EAAAvB,OAEAwB,EAAAQ,GAAA,CACA,GAAAoB,EAAAhC,EAAAG,EAAAC,IACA,SAGAA,GAAA,EAGA,qBCCe,IAAA6D,EAAA,oBAAApF,OAAAqF,GAAArF,OAAAqF,GAZf,SAAA1F,EAAAC,GAEA,OAAAD,IAAAC,EAGA,IAAAD,GAAA,EAAAA,IAAA,EAAAC,EAGAD,OAAAC,wBCwBe0F,EAJftF,OAAAyD,EAAA,EAAAzD,CAAO,SAAA0D,GACP,cAAAA,EAAA,YAAA6B,IAAA7B,EAAA,YAAA1D,OAAAc,UAAAM,SAAAJ,KAAA0C,GAAA3C,MAAA,QCZA,SAAAyE,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAjG,EAAUkF,EAAkBY,GAI5B,SAAAI,EAAA1F,EAAAF,GACA,OAAA6F,EAAA3F,EAAAF,EAAA0F,EAAA5E,QAAA6E,EAAA7E,SAIA,OAAUoE,EAAa,SAAAvF,EAAAmG,GACvB,OAAYZ,EAAaU,EAAAE,EAAAnG,IARfiF,EAAkBa,GASzB/F,GAGY,SAAAmG,EAAAnG,EAAAC,EAAA+F,EAAAC,GACf,GAAMR,EAASzF,EAAAC,GACf,SAGA,IAAAoG,EAAcV,EAAI3F,GAElB,GAAAqG,IAAgBV,EAAI1F,GACpB,SAGA,SAAAD,GAAA,MAAAC,EACA,SAGA,uBAAAD,EAAA,4CAAAC,EAAA,uBACA,0BAAAD,EAAA,wBAAAA,EAAA,uBAAAC,IAAA,oBAAAA,EAAA,wBAAAA,EAAA,uBAAAD,GAGA,uBAAAA,EAAAgC,QAAA,oBAAA/B,EAAA+B,OACA,0BAAAhC,EAAAgC,QAAAhC,EAAAgC,OAAA/B,IAAA,oBAAAA,EAAA+B,QAAA/B,EAAA+B,OAAAhC,GAGA,OAAAqG,GACA,gBACA,YACA,aACA,uBAAArG,EAAAsG,aAA8D,YC5D/C,SAAA3C,GAEf,IAAA4C,EAAAC,OAAA7C,GAAA4C,MAAA,mBACA,aAAAA,EAAA,GAAAA,EAAA,GDyDiDE,CAAazG,EAAAsG,aAC9D,OAAAtG,IAAAC,EAGA,MAEA,cACA,aACA,aACA,UAAAD,WAAAC,IAAqCwF,EAASzF,EAAA8E,UAAA7E,EAAA6E,WAC9C,SAGA,MAEA,WACA,IAAWW,EAASzF,EAAA8E,UAAA7E,EAAA6E,WACpB,SAGA,MAEA,YACA,OAAA9E,EAAA0G,OAAAzG,EAAAyG,MAAA1G,EAAA2G,UAAA1G,EAAA0G,QAEA,aACA,GAAA3G,EAAA4G,SAAA3G,EAAA2G,QAAA5G,EAAA6G,SAAA5G,EAAA4G,QAAA7G,EAAA8G,aAAA7G,EAAA6G,YAAA9G,EAAA+G,YAAA9G,EAAA8G,WAAA/G,EAAAgH,SAAA/G,EAAA+G,QAAAhH,EAAAiH,UAAAhH,EAAAgH,QACA,SAQA,IAFA,IAAArF,EAAAoE,EAAA5F,OAAA,EAEAwB,GAAA,IACA,GAAAoE,EAAApE,KAAA5B,EACA,OAAAiG,EAAArE,KAAA3B,EAGA2B,GAAA,EAGA,OAAAyE,GACA,UACA,OAAArG,EAAAkH,OAAAjH,EAAAiH,MAIArB,EAAA7F,EAAAmH,UAAAlH,EAAAkH,UAAAnB,EAAA3B,OAAA,CAAArE,IAAAiG,EAAA5B,OAAA,CAAApE,KAEA,UACA,OAAAD,EAAAkH,OAAAjH,EAAAiH,MAIArB,EAAA7F,EAAAoH,SAAAnH,EAAAmH,SAAApB,EAAA3B,OAAA,CAAArE,IAAAiG,EAAA5B,OAAA,CAAApE,KAEA,gBACA,YACA,aACA,cACA,aACA,aACA,WACA,YACA,aACA,gBACA,iBACA,wBACA,iBACA,kBACA,iBACA,kBACA,mBACA,mBACA,kBACA,MAEA,QAEA,SAGA,IAAAoH,EAAchH,OAAAmE,EAAA,EAAAnE,CAAIL,GAElB,GAAAqH,EAAAjH,SAAuBC,OAAAmE,EAAA,EAAAnE,CAAIJ,GAAAG,OAC3B,SAGA,IAAAkH,EAAAtB,EAAA3B,OAAA,CAAArE,IACAuH,EAAAtB,EAAA5B,OAAA,CAAApE,IAGA,IAFA2B,EAAAyF,EAAAjH,OAAA,EAEAwB,GAAA,IACA,IAAA4F,EAAAH,EAAAzF,GAEA,IAAUvB,OAAAoH,EAAA,EAAApH,CAAImH,EAAAvH,KAAAkG,EAAAlG,EAAAuH,GAAAxH,EAAAwH,GAAAF,EAAAC,GACd,SAGA3F,GAAA,EAGA,SExIA,IAAI8F,EAEJrH,OAAAkD,EAAA,EAAAlD,CAAO,SAAAL,EAAAC,GACP,OAASkG,EAAOnG,EAAAC,EAAA,SAGDR,EAAA,2ECaf,IAAIkI,EAEJtH,OAAAkD,EAAA,EAAAlD,CAAO,SAAAD,EAAAN,GACP,WAAAM,EACWC,OAAAyD,EAAA,EAAAzD,CAAOP,GAGTO,OAAAuH,EAAA,EAAAvH,CAAMD,ECzCA,SAAAyH,EAAAzH,EAAA0H,EAAAhI,GACf,kBAMA,IALA,IAAAiI,EAAA,GACAC,EAAA,EACAC,EAAA7H,EACA8H,EAAA,EAEAA,EAAAJ,EAAA1H,QAAA4H,EAAA7H,UAAAC,QAAA,CACA,IAAAiC,EAEA6F,EAAAJ,EAAA1H,UAA6CC,OAAA8H,EAAA,EAAA9H,CAAcyH,EAAAI,KAAAF,GAAA7H,UAAAC,QAC3DiC,EAAAyF,EAAAI,IAEA7F,EAAAlC,UAAA6H,GACAA,GAAA,GAGAD,EAAAG,GAAA7F,EAEWhC,OAAA8H,EAAA,EAAA9H,CAAcgC,KACzB4F,GAAA,GAGAC,GAAA,EAGA,OAAAD,GAAA,EAAAnI,EAAAmB,MAAA2C,KAAAmE,GAAkD1H,OAAAuH,EAAA,EAAAvH,CAAM4H,EAAAJ,EAAAzH,EAAA2H,EAAAjI,KDehC+H,CAAOzH,EAAA,GAAAN,MAGhBL,EAAA,sCEzDf,IAAA2I,EAAA7I,EAAA,KAqBAoF,EAEAtE,OAAA+H,EAAA,EAAA/H,CAAO,UACQZ,EAAA,sCCxBf,IAAA2I,EAAA7I,EAAA,KAsBA8I,EAEAhI,OAAA+H,EAAA,EAAA/H,CAAO,WACQZ,EAAA,sCCzBf,IAAA6I,EAAA/I,EAAA,IAqBAgJ,EAEAlI,OAAAiI,EAAA,EAAAjI,CAAO,SAAAL,GACP,OAAAA,IAGeP,EAAA,sCC3Bf,IAAA+I,EAAAjJ,EAAA,KAAAkJ,EAAAlJ,EAAA,KA4BAmJ,EAEArI,OAAAmI,EAAA,EAAAnI,CAAO,SAAAsI,EAAAC,EAAAC,GACP,OAASxI,OAAAoI,EAAA,EAAApI,CAAMyI,KAAAC,IAAAJ,EAAAvI,OAAAwI,EAAAxI,OAAAyI,EAAAzI,QAAA,WACf,OAAAuI,EAAA1H,MAAA2C,KAAAzD,WAAAyI,EAAA3H,MAAA2C,KAAAzD,WAAA0I,EAAA5H,MAAA2C,KAAAzD,eAIeV,EAAA,sCCpCf,IAAAgB,EAAAlB,EAAA,IAAAyJ,EAAAzJ,EAAA,IAAA0J,EAAA1J,EAAA,KAAA2J,EAAA3J,EAAA,KAAA4J,EAAA5J,EAAA,KAkCA8E,EAEAhE,OAAAI,EAAA,EAAAJ,CAAO,SAAAL,EAAAC,GACP,GAAMI,OAAA2I,EAAA,EAAA3I,CAAQL,GAAA,CACd,GAAQK,OAAA2I,EAAA,EAAA3I,CAAQJ,GAChB,OAAAD,EAAAqE,OAAApE,GAGA,UAAAqB,UAAwBjB,OAAA8I,EAAA,EAAA9I,CAAQJ,GAAA,oBAGhC,GAAMI,OAAA6I,EAAA,EAAA7I,CAASL,GAAA,CACf,GAAQK,OAAA6I,EAAA,EAAA7I,CAASJ,GACjB,OAAAD,EAAAC,EAGA,UAAAqB,UAAwBjB,OAAA8I,EAAA,EAAA9I,CAAQJ,GAAA,oBAGhC,SAAAD,GAAmBK,OAAA4I,EAAA,EAAA5I,CAAWL,EAAA,wBAC9B,OAAAA,EAAA,uBAAAC,GAGA,SAAAD,GAAmBK,OAAA4I,EAAA,EAAA5I,CAAWL,EAAAqE,QAC9B,OAAArE,EAAAqE,OAAApE,GAGA,UAAAqB,UAAsBjB,OAAA8I,EAAA,EAAA9I,CAAQL,GAAA,qEAGfP,EAAA,sCChEf,IAAA+I,EAAAjJ,EAAA,KA0BAiD,EAEAnC,OAAAmI,EAAA,EAAAnI,CAAO,SAAA+I,EAAAC,EAAAC,GACP,OAAAA,EAAA9G,QAAA4G,EAAAC,KAGe5J,EAAA,mDChCA,SAAA8J,EAAA5F,EAAA6F,GACf,kBACA,OAAAA,EAAAnI,KAAAuC,KAAAD,EAAA1C,MAAA2C,KAAAzD,mCCmDesJ,EAFfpJ,OAAAX,EAAA,EAAAW,CAAQqJ,EAAA,WCvCO,SAAAC,EAAAC,EAAA9J,GACf,kBACA,IAAAM,EAAAD,UAAAC,OAEA,OAAAA,EACA,OAAAN,IAGA,IAAAyE,EAAApE,UAAAC,EAAA,GACA,OAAWC,OAAAwJ,EAAA,EAAAxJ,CAAQkE,IAAA,oBAAAA,EAAAqF,GAAA9J,EAAAmB,MAAA2C,KAAAzD,WAAAoE,EAAAqF,GAAA3I,MAAAsD,EAAArD,MAAAC,UAAAC,MAAAC,KAAAlB,UAAA,EAAAC,EAAA,iBCcJ0J,EANfzJ,OAAAX,EAAA,EAAAW,CAEAsJ,EAAe,iBAAAI,EAAAC,EAAArI,GACf,OAAAT,MAAAC,UAAAC,MAAAC,KAAAM,EAAAoI,EAAAC,MCOeC,EANf5J,OAAAyD,EAAA,EAAAzD,CAEAsJ,EAAe,OAEfG,EAAK,EAAAI,oBCJUC,EAJf9J,OAAAyD,EAAA,EAAAzD,CAAO,SAAAsB,GACP,OAAStB,OAAA+J,EAAA,EAAA/J,CAASsB,KAAA0G,MAAA,IAAAgC,UAAA1F,KAAA,IAAAzD,MAAAC,UAAAC,MAAAC,KAAAM,EAAA,GAAA0I,YCHH,SAAAC,IACf,OAAAnK,UAAAC,OACA,UAAAmK,MAAA,0CAGA,OCJe,WACf,OAAApK,UAAAC,OACA,UAAAmK,MAAA,uCAGA,OAASlK,OAAAuH,EAAA,EAAAvH,CAAMF,UAAA,GAAAC,OAAsBqJ,EAAOF,EAAKpJ,UAAA,GAAgB8J,EAAI9J,cDDxDc,MAAA2C,KAAauG,EAAOhK,YAhCjCZ,EAAAC,EAAAC,EAAA,sBAAA6K,qFEsCeE,EAPfnK,OAAAyD,EAAA,EAAAzD,CAAO,SAAAmB,GACP,aAAAA,GAAA,oBAAAA,EAAA,sBAAAA,EAAA,8BAAAA,GAAA,MAAAA,EAAA8E,aAAA,oBAAA9E,EAAA8E,YAAA,sBAAA9E,EAAA8E,YAAA,8BAAA9E,GAAA,oBAAAA,EAAAiJ,MAAAjJ,EAAAiJ,QAAA,MAAAjJ,GAAA,MAAAA,EAAA8E,aAAA,oBAAA9E,EAAA8E,YAAAmE,MAAAjJ,EAAA8E,YAAAmE,QAA+YpK,OAAAwJ,EAAA,EAAAxJ,CAAQmB,GAAA,GAAWnB,OAAA+J,EAAA,EAAA/J,CAASmB,GAAA,GAAWnB,OAAAqK,EAAA,EAAArK,CAASmB,GAAA,GAAWnB,OAAAsK,EAAA,EAAAtK,CAAYmB,GAAA,WACtd,OAAArB,UADsd,QAEnd,aCTCyK,EAEJvK,OAAAyD,EAAA,EAAAzD,CAAO,SAAAmB,GACP,aAAAA,GAAsBnB,OAAA2B,EAAA,EAAA3B,CAAMmB,EAAIgJ,EAAKhJ,MAGtB/B,EAAA,kDCbf,IAAIoL,EAEJxK,OAAAyD,EAAA,EAAAzD,CAAO,SAAAsB,GACP,aAAAA,ICrBeH,EDqBmBG,EAAAvB,OCpBlC,oBAAAC,OAAAc,UAAAM,SAAAJ,KAAAG,IDoBkCG,EAAAvB,OAAA4E,ICrBnB,IAAAxD,IDwBA/B,EAAA","file":"static/js/6.d1fb8985.chunk.js","sourcesContent":["import _curry1 from './_curry1.js';\nimport _curry2 from './_curry2.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport curryN from './curryN.js';\nimport toString from './toString.js';\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nexport default invoker;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _indexOf from './_indexOf.js';\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","import equals from '../equals.js';\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport filter from './filter.js';\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","import _curry1 from './internal/_curry1.js';\nimport _toString from './internal/_toString.js';\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;","import _includes from './_includes.js';\nimport _map from './_map.js';\nimport _quote from './_quote.js';\nimport _toISOString from './_toISOString.js';\nimport keys from '../keys.js';\nimport reject from '../reject.js';\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function mapPairs(obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _curry1 from './internal/_curry1.js';\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","import _arrayFromIterator from './_arrayFromIterator.js';\nimport _includesWith from './_includesWith.js';\nimport _functionName from './_functionName.js';\nimport _has from './_has.js';\nimport _objectIs from './_objectIs.js';\nimport keys from '../keys.js';\nimport type from '../type.js';\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2.js';\nimport _equals from './internal/_equals.js';\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport _curry2 from './internal/_curry2.js';\nimport _curryN from './internal/_curryN.js';\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","import _arity from './_arity.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import invoker from './invoker.js';\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nexport default join;","import invoker from './invoker.js';\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\n\nvar split =\n/*#__PURE__*/\ninvoker(1, 'split');\nexport default split;","import _curry1 from './internal/_curry1.js';\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;","import _curry3 from './internal/_curry3.js';\nimport curryN from './curryN.js';\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\n\nvar ifElse =\n/*#__PURE__*/\n_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\n\nexport default ifElse;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport _isFunction from './internal/_isFunction.js';\nimport _isString from './internal/_isString.js';\nimport toString from './toString.js';\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nexport default concat;","import _curry3 from './internal/_curry3.js';\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nexport default replace;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _curry3 from './internal/_curry3.js';\nimport _reduce from './internal/_reduce.js';\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;","import _isArray from './_isArray.js';\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry3 from './internal/_curry3.js';\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry1 from './internal/_curry1.js';\nimport slice from './slice.js';\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import _curry1 from './internal/_curry1.js';\nimport _isString from './internal/_isString.js';\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nexport default reverse;","import pipe from './pipe.js';\nimport reverse from './reverse.js';\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\n\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}","import _arity from './internal/_arity.js';\nimport _pipe from './internal/_pipe.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1.js';\nimport _isArguments from './internal/_isArguments.js';\nimport _isArray from './internal/_isArray.js';\nimport _isObject from './internal/_isObject.js';\nimport _isString from './internal/_isString.js';\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\n\nexport default empty;","import _curry1 from './internal/_curry1.js';\nimport empty from './empty.js';\nimport equals from './equals.js';\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nexport default isEmpty;","import _curry1 from './internal/_curry1.js';\nimport _isNumber from './internal/_isNumber.js';\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\nvar length =\n/*#__PURE__*/\n_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\nexport default length;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}"],"sourceRoot":""}