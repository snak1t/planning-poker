{"version":3,"sources":["utils/hooks/useTextField.js","../node_modules/ramda/src/join.js","../node_modules/ramda/src/not.js","../node_modules/ramda/src/isEmpty.js","../node_modules/ramda/src/empty.js","../node_modules/ramda/src/concat.js","../node_modules/ramda/src/replace.js","../node_modules/ramda/es/not.js","Pages/Games/atoms.tsx","Pages/Games/Components/List.tsx","Pages/Games/Components/Form.jsx","components/Game/Quick.game.jsx","Pages/Games/index.tsx"],"names":["useTextField","initialValue","_useState","useState","_useState2","Object","_home_travis_build_snak1t_planning_poker_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","value","setValue","inputValue","valueToSet","target","join","__webpack_require__","invoker","module","exports","not","_curry1","a","empty","equals","isEmpty","x","_isArguments","_isArray","_isObject","_isString","constructor","arguments","_curry2","_isFunction","toString","concat","b","TypeError","replace","_curry3","regex","replacement","str","es_not","GamesHeader","styled","header","_templateObject","GamesWrapper","section","_templateObject2","GamesList","_useContext","useContext","GamesContext","games","removeGame","user","AuthContext","columns","title","dataIndex","key","render","text","gameItem","react_default","createElement","Link","to","info","email","id","isCompleted","es_button","Group","onClick","length","table","rowKey","expandedRowRender","record","style","margin","description","dataSource","auditIcon","icon","type","color","GameForm","_ref","onClose","_useTextField","_useTextField2","slicedToArray","setDescription","_useTextField3","_useTextField4","setTitle","addGame","modal","visible","onCancel","onOk","es_form","Item","input","prefix","name","placeholder","onChange","TextArea","es_radio","defaultValue","buttonStyle","Button","joinWithSlash","splitBySlash","split","notEmpty","compose","extractAddress","ifElse","filter","window","location","origin","QuickGameInput","Quick_game_templateObject","QuickGame","withRouter","history","handler","string","message","newUrlAddress","push","goToGame","AddGameIcon","Icon","Games_templateObject","GamesContainer","logout","modalWindow","setModalWindowVisibility","toggleModalWindow","className","Quick_game_QuickGame","List_GamesList"],"mappings":"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","file":"static/js/2.f16fff79.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const useTextField = initialValue => {\n    const [value, setValue] = useState(initialValue);\n    const handler = inputValue => {\n        const valueToSet = inputValue ? inputValue.target.value : '';\n        setValue(valueToSet);\n    };\n    return [value, handler];\n};\n","var invoker =\n/*#__PURE__*/\nrequire('./invoker');\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nmodule.exports = join;","var _curry1 =\n/*#__PURE__*/\nrequire('./internal/_curry1');\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nmodule.exports = not;","var _curry1 =\n/*#__PURE__*/\nrequire('./internal/_curry1');\n\nvar empty =\n/*#__PURE__*/\nrequire('./empty');\n\nvar equals =\n/*#__PURE__*/\nrequire('./equals');\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\n\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nmodule.exports = isEmpty;","var _curry1 =\n/*#__PURE__*/\nrequire('./internal/_curry1');\n\nvar _isArguments =\n/*#__PURE__*/\nrequire('./internal/_isArguments');\n\nvar _isArray =\n/*#__PURE__*/\nrequire('./internal/_isArray');\n\nvar _isObject =\n/*#__PURE__*/\nrequire('./internal/_isObject');\n\nvar _isString =\n/*#__PURE__*/\nrequire('./internal/_isString');\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\n\nmodule.exports = empty;","var _curry2 =\n/*#__PURE__*/\nrequire('./internal/_curry2');\n\nvar _isArray =\n/*#__PURE__*/\nrequire('./internal/_isArray');\n\nvar _isFunction =\n/*#__PURE__*/\nrequire('./internal/_isFunction');\n\nvar _isString =\n/*#__PURE__*/\nrequire('./internal/_isString');\n\nvar toString =\n/*#__PURE__*/\nrequire('./toString');\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nmodule.exports = concat;","var _curry3 =\n/*#__PURE__*/\nrequire('./internal/_curry3');\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nmodule.exports = replace;","import _curry1 from './internal/_curry1.js';\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;","import styled from 'styled-components';\n\nexport const GamesHeader = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.4rem 1rem;\n    h1 {\n        font-size: 1.2rem;\n        line-height: 1.4rem;\n    }\n`;\n\nexport const GamesWrapper = styled.section`\n    padding: 2rem;\n`;\n","import React, { useContext } from 'react';\nimport '../styles.css';\nimport { GamesWrapper } from '../atoms';\nimport { GamesContext, Game } from '../../../Data/Games/GamesContext';\nimport { Table, Button } from 'antd';\nimport { ColumnProps } from 'antd/lib/table';\nimport { AuthContext } from '../../../Data/Auth/AuthContext';\nimport { Link } from 'react-router-dom';\n\nexport const GamesList: React.SFC<{}> = () => {\n    const { games, removeGame } = useContext(GamesContext);\n    const { user } = useContext(AuthContext);\n\n    const columns: ColumnProps<Game>[] = [\n        {\n            title: 'Title',\n            dataIndex: 'title',\n            key: 'title',\n            render: (text, gameItem) => {\n                return <Link to={`/game/${user.info.email}/${gameItem.id}`}>{text}</Link>;\n            },\n        },\n        {\n            title: 'Amount of stories',\n            dataIndex: 'storiesCount',\n            key: 'storiesCount',\n        },\n        {\n            title: 'Game Completed?',\n            dataIndex: 'isCompleted',\n            key: 'isCompleted',\n            render: (text: string, gameItem: Game) => <span>{gameItem.isCompleted ? 'Yes' : 'No'}</span>,\n        },\n        {\n            title: 'Actions',\n            key: 'actions',\n            render: (text: string, gameItem: Game) => (\n                <Button.Group>\n                    <Button>Edit</Button>\n                    <Button\n                        onClick={() => {\n                            removeGame(gameItem.id);\n                        }}\n                    >\n                        Remove\n                    </Button>\n                </Button.Group>\n            ),\n        },\n    ];\n    return (\n        <GamesWrapper>\n            {games.length === 0 ? (\n                'No games yet'\n            ) : (\n                <Table\n                    rowKey=\"id\"\n                    expandedRowRender={record => (\n                        <p style={{ margin: 0 }}>{record.description || 'No description for game provided'}</p>\n                    )}\n                    columns={columns}\n                    dataSource={games}\n                />\n            )}\n        </GamesWrapper>\n    );\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Input, Icon, Radio, Form } from 'antd';\nimport { useTextField } from '../../../utils/hooks/useTextField';\nimport { GamesContext } from '../../../Data/Games/GamesContext';\n\nconst auditIcon = <Icon type=\"audit\" style={{ color: 'rgba(0,0,0,.25)' }} />;\n\nexport function GameForm({ onClose }) {\n    const [description, setDescription] = useTextField('');\n    const [title, setTitle] = useTextField('');\n    const { addGame } = useContext(GamesContext);\n    const onSubmit = () => {\n        addGame({ description, title });\n        onClose();\n    };\n    return (\n        <Modal visible={true} title=\"Create new game\" onCancel={onClose} onOk={onSubmit}>\n            <Form.Item>\n                <Input\n                    prefix={auditIcon}\n                    id=\"title\"\n                    name=\"title\"\n                    placeholder=\"Game Title\"\n                    value={title}\n                    onChange={setTitle}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input.TextArea\n                    id=\"description\"\n                    name=\"description\"\n                    placeholder=\"Optional game description\"\n                    value={description}\n                    onChange={setDescription}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Radio.Group defaultValue=\"fibonacci\" buttonStyle=\"solid\">\n                    <Radio.Button value=\"fibonacci\">Fibonacci</Radio.Button>\n                    <Radio.Button value=\"sizes\">Sizes</Radio.Button>\n                </Radio.Group>\n            </Form.Item>\n        </Modal>\n    );\n}\n\nGameForm.propTypes = {\n    onClose: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport compose from 'ramda/src/compose';\nimport replace from 'ramda/src/replace';\nimport concat from 'ramda/src/concat';\nimport split from 'ramda/src/split';\nimport filter from 'ramda/src/filter';\nimport not from 'ramda/src/not';\nimport isEmpty from 'ramda/src/isEmpty';\nimport ifElse from 'ramda/src/ifElse';\nimport join from 'ramda/src/join';\nimport length from 'ramda/src/length';\nimport equals from 'ramda/src/equals';\n\nimport { Input, Button, message } from 'antd';\nimport { useTextField } from '../../utils/hooks/useTextField';\n\nconst joinWithSlash = join('/');\nconst splitBySlash = split('/');\nconst notEmpty = compose(\n    not,\n    isEmpty,\n);\n\nconst extractAddress = compose(\n    ifElse(\n        compose(\n            equals(3),\n            length,\n        ),\n        compose(\n            concat('/'),\n            joinWithSlash,\n        ),\n        compose(\n            concat('/game/'),\n            joinWithSlash,\n        ),\n    ),\n    filter(notEmpty),\n    splitBySlash,\n    replace(window.location.origin, ''),\n);\n\nconst QuickGameInput = styled.section`\n    width: 300px;\n    margin-right: 10px;\n    margin-left: auto;\n    display: flex;\n`;\n\nexport const QuickGame = withRouter(function QuickGame({ history }) {\n    const [value, handler] = useTextField('');\n    const goToGame = (string, history) => {\n        if (string === '') {\n            message.info('Please insert value in text field');\n            return handler();\n        }\n        const newUrlAddress = extractAddress(string);\n        history.push(newUrlAddress);\n    };\n    return (\n        <QuickGameInput>\n            <Input type=\"text\" value={value} onChange={handler} placeholder=\"Game Url\" />\n            <Button onClick={() => goToGame(value, history)}>Go</Button>\n        </QuickGameInput>\n    );\n});\n","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { not } from 'ramda';\nimport { Icon, Button } from 'antd';\n\nimport './styles.css';\nimport { GamesList } from './Components/List';\nimport { GameForm } from './Components/Form';\nimport { GamesHeader } from './atoms';\nimport { QuickGame } from '../../components/Game/Quick.game';\nimport { AuthContext } from '../../Data/Auth/AuthContext';\nimport { RouteComponentProps } from 'react-router';\n\nconst AddGameIcon = styled(Icon)`\n    font-size: 1.4rem;\n    cursor: pointer;\n`;\n\nconst GamesContainer: React.SFC<RouteComponentProps> = () => {\n    const { logout } = useContext(AuthContext);\n    const [modalWindow, setModalWindowVisibility] = useState(false);\n    const toggleModalWindow = () => setModalWindowVisibility(not);\n\n    return (\n        <div className=\"Games-container\">\n            {modalWindow ? <GameForm onClose={toggleModalWindow} /> : null}\n            <GamesHeader>\n                <h2>Your games</h2>\n                <QuickGame />\n                <Button onClick={logout}>Sign out</Button>\n                <AddGameIcon type=\"folder-add\" onClick={toggleModalWindow} title=\"Add new game\" />\n            </GamesHeader>\n            <GamesList />\n        </div>\n    );\n};\n\nexport default GamesContainer;\n"],"sourceRoot":""}