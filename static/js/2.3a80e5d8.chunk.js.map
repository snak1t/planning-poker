{"version":3,"sources":["utils/hooks/useTextField.js","../node_modules/ramda/src/not.js","../node_modules/ramda/src/join.js","../node_modules/ramda/src/isEmpty.js","../node_modules/ramda/src/empty.js","../node_modules/ramda/src/concat.js","../node_modules/ramda/src/replace.js","Pages/Games/Components/Item.jsx","Pages/Games/atoms.jsx","Pages/Games/Components/List.jsx","Pages/Games/Components/Form.jsx","components/Game/Quick.game.jsx","Pages/Games/index.jsx"],"names":["useTextField","initialValue","_useState","useState","_useState2","Object","_home_travis_build_snak1t_planning_poker_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","value","setValue","inputValue","valueToSet","target","not","__webpack_require__","_curry1","a","module","exports","join","invoker","empty","equals","isEmpty","x","_isArguments","_isArray","_isObject","_isString","constructor","arguments","_curry2","_isFunction","toString","concat","b","TypeError","replace","_curry3","regex","replacement","str","GameItem","_ref","game","onPlayGame","onDeleteGame","react_default","createElement","card","style","margin","title","actions","icon","type","onClick","description","GamesHeader","styled","header","_templateObject","GamesGrid","section","_templateObject2","GameGridItem","article","_templateObject3","GamesList","_useContext","useContext","GamesContext","games","removeGame","displayGamesList","map","id","key","Item_GameItem","length","auditIcon","color","GameForm","onClose","_useTextField","_useTextField2","slicedToArray","setDescription","_useTextField3","_useTextField4","setTitle","addGame","modal","visible","onCancel","onOk","es_form","Item","input","prefix","name","placeholder","onChange","TextArea","es_radio","Group","defaultValue","buttonStyle","Button","joinWithSlash","splitBySlash","split","notEmpty","compose","extractAddress","ifElse","filter","window","location","origin","QuickGameInput","Quick_game_templateObject","QuickGame","withRouter","history","handler","es_button","string","message","info","newUrlAddress","push","goToGame","AddGameIcon","Icon","Games_templateObject","GamesContainer","AuthContext","logout","user","modalWindow","setModalWindowVisibility","toggleModalWindow","className","Quick_game_QuickGame","email"],"mappings":"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","file":"static/js/2.3a80e5d8.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const useTextField = initialValue => {\n    const [value, setValue] = useState(initialValue);\n    const handler = inputValue => {\n        const valueToSet = inputValue ? inputValue.target.value : '';\n        setValue(valueToSet);\n    };\n    return [value, handler];\n};\n","var _curry1 =\n/*#__PURE__*/\nrequire('./internal/_curry1');\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nmodule.exports = not;","var invoker =\n/*#__PURE__*/\nrequire('./invoker');\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nmodule.exports = join;","var _curry1 =\n/*#__PURE__*/\nrequire('./internal/_curry1');\n\nvar empty =\n/*#__PURE__*/\nrequire('./empty');\n\nvar equals =\n/*#__PURE__*/\nrequire('./equals');\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\n\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nmodule.exports = isEmpty;","var _curry1 =\n/*#__PURE__*/\nrequire('./internal/_curry1');\n\nvar _isArguments =\n/*#__PURE__*/\nrequire('./internal/_isArguments');\n\nvar _isArray =\n/*#__PURE__*/\nrequire('./internal/_isArray');\n\nvar _isObject =\n/*#__PURE__*/\nrequire('./internal/_isObject');\n\nvar _isString =\n/*#__PURE__*/\nrequire('./internal/_isString');\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\n\nmodule.exports = empty;","var _curry2 =\n/*#__PURE__*/\nrequire('./internal/_curry2');\n\nvar _isArray =\n/*#__PURE__*/\nrequire('./internal/_isArray');\n\nvar _isFunction =\n/*#__PURE__*/\nrequire('./internal/_isFunction');\n\nvar _isString =\n/*#__PURE__*/\nrequire('./internal/_isString');\n\nvar toString =\n/*#__PURE__*/\nrequire('./toString');\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nmodule.exports = concat;","var _curry3 =\n/*#__PURE__*/\nrequire('./internal/_curry3');\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nmodule.exports = replace;","import React from 'react';\nimport '../styles.css';\nimport { Card, Icon } from 'antd';\n\nexport const GameItem = ({ game, onPlayGame, onDeleteGame }) => {\n    return (\n        <Card\n            style={{ margin: '0.4rem' }}\n            title={game.title}\n            actions={[<Icon type=\"play-circle\" onClick={onPlayGame} />, <Icon type=\"delete\" onClick={onDeleteGame} />]}\n        >\n            {game.description}\n        </Card>\n    );\n};\n","import styled from 'styled-components';\n\nexport const GamesHeader = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.4rem 1rem;\n    h1 {\n        font-size: 1.2rem;\n        line-height: 1.4rem;\n    }\n`;\n\nexport const GamesGrid = styled.section`\n    padding: 2rem;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 1rem;\n    min-height: 0;\n    min-width: 0;\n    @media screen and (max-width: 400px) {\n        padding: 0.2rem;\n        grid-template-columns: 1fr;\n    }\n`;\n\nexport const GameGridItem = styled.article`\n    min-width: 0;\n`;\n","import React, { useContext } from 'react';\nimport map from 'ramda/src/map';\nimport '../styles.css';\nimport { GameItem } from './Item';\nimport { GamesGrid, GameGridItem } from '../atoms';\nimport { GamesContext } from '../../../Data/Games/GamesContext';\n\nexport function GamesList({ onPlayGame }) {\n    const { games, removeGame } = useContext(GamesContext);\n    const displayGamesList = map(game => {\n        const { id } = game;\n        return (\n            <GameGridItem key={id}>\n                <GameItem game={game} onPlayGame={() => onPlayGame(id)} onDeleteGame={() => removeGame(id)} />\n            </GameGridItem>\n        );\n    });\n    return <GamesGrid>{games.length === 0 ? 'No games yet' : displayGamesList(games)}</GamesGrid>;\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Input, Icon, Radio, Form } from 'antd';\nimport { useTextField } from '../../../utils/hooks/useTextField';\nimport { GamesContext } from '../../../Data/Games/GamesContext';\n\nconst auditIcon = <Icon type=\"audit\" style={{ color: 'rgba(0,0,0,.25)' }} />;\n\nexport function GameForm({ onClose }) {\n    const [description, setDescription] = useTextField('');\n    const [title, setTitle] = useTextField('');\n    const { addGame } = useContext(GamesContext);\n    const onSubmit = () => {\n        addGame({ description, title });\n        onClose();\n    };\n    return (\n        <Modal visible={true} title=\"Create new game\" onCancel={onClose} onOk={onSubmit}>\n            <Form.Item>\n                <Input\n                    prefix={auditIcon}\n                    id=\"title\"\n                    name=\"title\"\n                    placeholder=\"Game Title\"\n                    value={title}\n                    onChange={setTitle}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input.TextArea\n                    id=\"description\"\n                    name=\"description\"\n                    placeholder=\"Optional game description\"\n                    value={description}\n                    onChange={setDescription}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Radio.Group defaultValue=\"fibonaci\" buttonStyle=\"solid\">\n                    <Radio.Button value=\"fibonaci\">Fibbonacci</Radio.Button>\n                    <Radio.Button value=\"sizes\">Sizes</Radio.Button>\n                </Radio.Group>\n            </Form.Item>\n        </Modal>\n    );\n}\n\nGameForm.propTypes = {\n    onClose: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport compose from 'ramda/src/compose';\nimport replace from 'ramda/src/replace';\nimport concat from 'ramda/src/concat';\nimport split from 'ramda/src/split';\nimport filter from 'ramda/src/filter';\nimport not from 'ramda/src/not';\nimport isEmpty from 'ramda/src/isEmpty';\nimport ifElse from 'ramda/src/ifElse';\nimport join from 'ramda/src/join';\nimport length from 'ramda/src/length';\nimport equals from 'ramda/src/equals';\n\nimport { Input, Button, message } from 'antd';\nimport { useTextField } from '../../utils/hooks/useTextField';\n\nconst joinWithSlash = join('/');\nconst splitBySlash = split('/');\nconst notEmpty = compose(\n    not,\n    isEmpty,\n);\n\nconst extractAddress = compose(\n    ifElse(\n        compose(\n            equals(3),\n            length,\n        ),\n        compose(\n            concat('/'),\n            joinWithSlash,\n        ),\n        compose(\n            concat('/game/'),\n            joinWithSlash,\n        ),\n    ),\n    filter(notEmpty),\n    splitBySlash,\n    replace(window.location.origin, ''),\n);\n\nconst QuickGameInput = styled.section`\n    width: 300px;\n    margin-right: 10px;\n    margin-left: auto;\n    display: flex;\n`;\n\nexport const QuickGame = withRouter(function QuickGame({ history }) {\n    const [value, handler] = useTextField('');\n    const goToGame = (string, history) => {\n        if (string === '') {\n            message.info('Please insert value in text field');\n            return handler();\n        }\n        const newUrlAddress = extractAddress(string);\n        history.push(newUrlAddress);\n    };\n    return (\n        <QuickGameInput>\n            <Input type=\"text\" value={value} onChange={handler} placeholder=\"Game Url\" />\n            <Button onClick={() => goToGame(value, history)}>Go</Button>\n        </QuickGameInput>\n    );\n});\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport not from 'ramda/src/not';\nimport { Icon, Button } from 'antd';\n\nimport './styles.css';\nimport { GamesList } from './Components/List';\nimport { GameForm } from './Components/Form';\nimport { GamesHeader } from './atoms';\nimport { QuickGame } from '../../components/Game/Quick.game';\nimport { AuthContext } from '../../Data/Auth/AuthContext';\n\nconst AddGameIcon = styled(Icon)`\n    font-size: 1.4rem;\n    cursor: pointer;\n`;\n\nexport default function GamesContainer({ history }) {\n    const { logout, user } = useContext(AuthContext);\n    const [modalWindow, setModalWindowVisibility] = useState(false);\n    const navigateToGame = id => history.push(`/game/${user.info.email}/${id}`);\n    const toggleModalWindow = () => setModalWindowVisibility(not);\n\n    return (\n        <div className=\"Games-container\">\n            {modalWindow ? <GameForm onClose={toggleModalWindow} /> : null}\n            <GamesHeader>\n                <h2>Your games</h2>\n                <QuickGame />\n                <Button onClick={logout}>Sign out</Button>\n                <AddGameIcon type=\"folder-add\" onClick={toggleModalWindow} title=\"Add new game\" />\n            </GamesHeader>\n            <GamesList onPlayGame={navigateToGame} />\n        </div>\n    );\n}\n\nGamesContainer.propTypes = {\n    history: PropTypes.object.isRequired,\n};\n"],"sourceRoot":""}